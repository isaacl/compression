package org.lichess.compression.game

import org.lichess.compression.BitOps

object Huffman:
  def write(value: Int, writer: BitOps.Writer): Unit =
    val symbol = CODES(value)
    writer.writeBits(symbol.code, symbol.bits)

  def read(reader: BitOps.Reader): Int =
    def traverse(node: Node): Node =
      if node.zero == null && node.one == null then node
      else
        val bit = reader.readBits(1)
        if bit == 0 then traverse(node.zero)
        else traverse(node.one)
    traverse(ROOT).leaf

  private case class Symbol(code: Int, bits: Int)

  private class Node(val zero: Node, val one: Node, val leaf: Int):
    def this(leaf: Int) = this(null, null, leaf)
    def this(zero: Node, one: Node) = this(zero, one, -1)

  private def buildTree(code: Int, bits: Int): Node =
    assert(bits <= 32)
    (0 to 0xff).find(i => CODES(i).code == code && CODES(i).bits == bits) match
      case Some(i) => Node(i)
      case None    => Node(buildTree(code << 1, bits + 1), buildTree((code << 1) | 1, bits + 1))

  private def b(s: String): Int = Integer.parseInt(s, 2)

  private val CODES = Array[Symbol](
    Symbol(b("00"), 2),                               // 0: 225883932 (20.71%)
    Symbol(b("100"), 3),                              // 1: 134956126 (12.37%)
    Symbol(b("1101"), 4),                             // 2: 89041269 (8.16%)
    Symbol(b("1010"), 4),                             // 3: 69386238 (6.36%)
    Symbol(b("0101"), 4),                             // 4: 57040790 (5.23%)
    Symbol(b("11101"), 5),                            // 5: 44974559 (4.12%)
    Symbol(b("10111"), 5),                            // 6: 36547155 (3.35%)
    Symbol(b("01110"), 5),                            // 7: 31624920 (2.90%)
    Symbol(b("01100"), 5),                            // 8: 28432772 (2.61%)
    Symbol(b("01000"), 5),                            // 9: 26540493 (2.43%)
    Symbol(b("111101"), 6),                           // 10: 24484873 (2.24%)
    Symbol(b("111001"), 6),                           // 11: 23058034 (2.11%)
    Symbol(b("111100"), 6),                           // 12: 23535272 (2.16%)
    Symbol(b("110011"), 6),                           // 13: 20482457 (1.88%)
    Symbol(b("110010"), 6),                           // 14: 20450172 (1.87%)
    Symbol(b("110000"), 6),                           // 15: 18316057 (1.68%)
    Symbol(b("101101"), 6),                           // 16: 17214833 (1.58%)
    Symbol(b("101100"), 6),                           // 17: 16964761 (1.56%)
    Symbol(b("011111"), 6),                           // 18: 16530028 (1.52%)
    Symbol(b("011011"), 6),                           // 19: 15369510 (1.41%)
    Symbol(b("010011"), 6),                           // 20: 14178440 (1.30%)
    Symbol(b("011010"), 6),                           // 21: 14275714 (1.31%)
    Symbol(b("1111111"), 7),                          // 22: 13353306 (1.22%)
    Symbol(b("1111101"), 7),                          // 23: 12829602 (1.18%)
    Symbol(b("1111110"), 7),                          // 24: 13102592 (1.20%)
    Symbol(b("1111100"), 7),                          // 25: 11932647 (1.09%)
    Symbol(b("1110000"), 7),                          // 26: 10608657 (0.97%)
    Symbol(b("1100011"), 7),                          // 27: 10142459 (0.93%)
    Symbol(b("0111101"), 7),                          // 28: 8294594 (0.76%)
    Symbol(b("0100101"), 7),                          // 29: 7337490 (0.67%)
    Symbol(b("0100100"), 7),                          // 30: 6337744 (0.58%)
    Symbol(b("11100010"), 8),                         // 31: 5380717 (0.49%)
    Symbol(b("11000101"), 8),                         // 32: 4560556 (0.42%)
    Symbol(b("01111001"), 8),                         // 33: 3913313 (0.36%)
    Symbol(b("111000111"), 9),                        // 34: 3038767 (0.28%)
    Symbol(b("110001001"), 9),                        // 35: 2480514 (0.23%)
    Symbol(b("011110001"), 9),                        // 36: 1951026 (0.18%)
    Symbol(b("011110000"), 9),                        // 37: 1521451 (0.14%)
    Symbol(b("1110001100"), 10),                      // 38: 1183252 (0.11%)
    Symbol(b("1100010000"), 10),                      // 39: 938708 (0.09%)
    Symbol(b("11100011010"), 11),                     // 40: 673339 (0.06%)
    Symbol(b("11000100010"), 11),                     // 41: 513153 (0.05%)
    Symbol(b("111000110110"), 12),                    // 42: 377299 (0.03%)
    Symbol(b("110001000110"), 12),                    // 43: 276996 (0.03%)
    Symbol(b("1110001101110"), 13),                   // 44: 199682 (0.02%)
    Symbol(b("1100010001110"), 13),                   // 45: 144602 (0.01%)
    Symbol(b("11100011011110"), 14),                  // 46: 103313 (0.01%)
    Symbol(b("11000100011110"), 14),                  // 47: 73046 (0.01%)
    Symbol(b("111000110111110"), 15),                 // 48: 52339 (0.00%)
    Symbol(b("110001000111110"), 15),                 // 49: 36779 (0.00%)
    Symbol(b("1110001101111110"), 16),                // 50: 26341 (0.00%)
    Symbol(b("1100010001111110"), 16),                // 51: 18719 (0.00%)
    Symbol(b("11000100011111111"), 17),               // 52: 13225 (0.00%)
    Symbol(b("111000110111111111"), 18),              // 53: 9392 (0.00%)
    Symbol(b("111000110111111101"), 18),              // 54: 6945 (0.00%)
    Symbol(b("110001000111111100"), 18),              // 55: 4893 (0.00%)
    Symbol(b("1110001101111111100"), 19),             // 56: 3698 (0.00%)
    Symbol(b("1100010001111111011"), 19),             // 57: 2763 (0.00%)
    Symbol(b("11100011011111111011"), 20),            // 58: 2114 (0.00%)
    Symbol(b("11100011011111110010"), 20),            // 59: 1631 (0.00%)
    Symbol(b("11100011011111110000"), 20),            // 60: 1380 (0.00%)
    Symbol(b("111000110111111110101"), 21),           // 61: 1090 (0.00%)
    Symbol(b("111000110111111100110"), 21),           // 62: 887 (0.00%)
    Symbol(b("111000110111111100010"), 21),           // 63: 715 (0.00%)
    Symbol(b("110001000111111101001"), 21),           // 64: 590 (0.00%)
    Symbol(b("110001000111111101000"), 21),           // 65: 549 (0.00%)
    Symbol(b("1110001101111111101000"), 22),          // 66: 477 (0.00%)
    Symbol(b("1110001101111111000110"), 22),          // 67: 388 (0.00%)
    Symbol(b("1100010001111111010111"), 22),          // 68: 351 (0.00%)
    Symbol(b("1100010001111111010101"), 22),          // 69: 319 (0.00%)
    Symbol(b("11100011011111111010011"), 23),         // 70: 262 (0.00%)
    Symbol(b("11100011011111110011110"), 23),         // 71: 236 (0.00%)
    Symbol(b("11100011011111110001110"), 23),         // 72: 200 (0.00%)
    Symbol(b("11100011011111110001111"), 23),         // 73: 210 (0.00%)
    Symbol(b("11000100011111110101100"), 23),         // 74: 153 (0.00%)
    Symbol(b("111000110111111100111011"), 24),        // 75: 117 (0.00%)
    Symbol(b("111000110111111110100100"), 24),        // 76: 121 (0.00%)
    Symbol(b("111000110111111100111111"), 24),        // 77: 121 (0.00%)
    Symbol(b("111000110111111100111010"), 24),        // 78: 115 (0.00%)
    Symbol(b("110001000111111101011011"), 24),        // 79: 95 (0.00%)
    Symbol(b("110001000111111101010011"), 24),        // 80: 75 (0.00%)
    Symbol(b("110001000111111101010001"), 24),        // 81: 67 (0.00%)
    Symbol(b("1110001101111111001110011"), 25),       // 82: 55 (0.00%)
    Symbol(b("1110001101111111001110001"), 25),       // 83: 50 (0.00%)
    Symbol(b("1110001101111111001110010"), 25),       // 84: 55 (0.00%)
    Symbol(b("1100010001111111010100101"), 25),       // 85: 33 (0.00%)
    Symbol(b("1100010001111111010110100"), 25),       // 86: 33 (0.00%)
    Symbol(b("1100010001111111010100001"), 25),       // 87: 30 (0.00%)
    Symbol(b("11100011011111110011111011"), 26),      // 88: 32 (0.00%)
    Symbol(b("11100011011111110011111001"), 26),      // 89: 28 (0.00%)
    Symbol(b("11100011011111110011111010"), 26),      // 90: 29 (0.00%)
    Symbol(b("11100011011111110011111000"), 26),      // 91: 27 (0.00%)
    Symbol(b("11000100011111110101101011"), 26),      // 92: 21 (0.00%)
    Symbol(b("111000110111111110100101111"), 27),     // 93: 15 (0.00%)
    Symbol(b("110001000111111101011010100"), 27),     // 94: 9 (0.00%)
    Symbol(b("110001000111111101011010101"), 27),     // 95: 10 (0.00%)
    Symbol(b("111000110111111100111000010"), 27),     // 96: 12 (0.00%)
    Symbol(b("111000110111111100111000011"), 27),     // 97: 12 (0.00%)
    Symbol(b("110001000111111101010010011"), 27),     // 98: 8 (0.00%)
    Symbol(b("1110001101111111101001010011"), 28),    // 99: 7 (0.00%)
    Symbol(b("1100010001111111010100100101"), 28),    // 100: 2 (0.00%)
    Symbol(b("1110001101111111001110000011"), 28),    // 101: 4 (0.00%)
    Symbol(b("1110001101111111001110000010"), 28),    // 102: 5 (0.00%)
    Symbol(b("1110001101111111001110000000"), 28),    // 103: 5 (0.00%)
    Symbol(b("11100011011111110011100000010"), 29),   // 104
    Symbol(b("11000100011111110101000001001"), 29),   // 105: 5 (0.00%)
    Symbol(b("11100011011111110011100000011"), 29),   // 106: 1 (0.00%)
    Symbol(b("11000100011111110101000001000"), 29),   // 107: 1 (0.00%)
    Symbol(b("11000100011111110101000000011"), 29),   // 108
    Symbol(b("110001000111111101010000011110"), 30),  // 109: 1 (0.00%)
    Symbol(b("111000110111111110100101100110"), 30),  // 110: 2 (0.00%)
    Symbol(b("111000110111111110100101010111"), 30),  // 111: 1 (0.00%)
    Symbol(b("110001000111111101010000001101"), 30),  // 112: 1 (0.00%)
    Symbol(b("111000110111111110100101100010"), 30),  // 113
    Symbol(b("110001000111111101010000001000"), 30),  // 114
    Symbol(b("110001000111111101010000000101"), 30),  // 115: 1 (0.00%)
    Symbol(b("110001000111111101010000000000"), 30),  // 116
    Symbol(b("110001000111111101010000001010"), 30),  // 117
    Symbol(b("110001000111111101010010001101"), 30),  // 118
    Symbol(b("110001000111111101010010010011"), 30),  // 119
    Symbol(b("110001000111111101010010010010"), 30),  // 120
    Symbol(b("110001000111111101010010010001"), 30),  // 121
    Symbol(b("110001000111111101010010010000"), 30),  // 122
    Symbol(b("110001000111111101010010001011"), 30),  // 123
    Symbol(b("110001000111111101010010001010"), 30),  // 124
    Symbol(b("110001000111111101010010001001"), 30),  // 125
    Symbol(b("110001000111111101010010001000"), 30),  // 126
    Symbol(b("110001000111111101010010000111"), 30),  // 127
    Symbol(b("110001000111111101010010000110"), 30),  // 128
    Symbol(b("110001000111111101010010000011"), 30),  // 129
    Symbol(b("110001000111111101010010000010"), 30),  // 130
    Symbol(b("110001000111111101010000011011"), 30),  // 131
    Symbol(b("110001000111111101010000011010"), 30),  // 132
    Symbol(b("110001000111111101010000011001"), 30),  // 133
    Symbol(b("110001000111111101010000011000"), 30),  // 134
    Symbol(b("110001000111111101010000010101"), 30),  // 135
    Symbol(b("110001000111111101010000010100"), 30),  // 136
    Symbol(b("110001000111111101010010000101"), 30),  // 137
    Symbol(b("110001000111111101010010000100"), 30),  // 138
    Symbol(b("110001000111111101010000011111"), 30),  // 139
    Symbol(b("110001000111111101010000011101"), 30),  // 140
    Symbol(b("110001000111111101010000011100"), 30),  // 141
    Symbol(b("110001000111111101010010000001"), 30),  // 142
    Symbol(b("110001000111111101010010000000"), 30),  // 143
    Symbol(b("110001000111111101010000001111"), 30),  // 144
    Symbol(b("110001000111111101010000001110"), 30),  // 145
    Symbol(b("110001000111111101010000001100"), 30),  // 146
    Symbol(b("110001000111111101010000010111"), 30),  // 147
    Symbol(b("110001000111111101010000010110"), 30),  // 148
    Symbol(b("110001000111111101010000001001"), 30),  // 149
    Symbol(b("110001000111111101010000000100"), 30),  // 150
    Symbol(b("110001000111111101010000000011"), 30),  // 151
    Symbol(b("110001000111111101010000000010"), 30),  // 152
    Symbol(b("110001000111111101010000000001"), 30),  // 153
    Symbol(b("110001000111111101010000001011"), 30),  // 154
    Symbol(b("110001000111111101010010001111"), 30),  // 155
    Symbol(b("110001000111111101010010001110"), 30),  // 156
    Symbol(b("110001000111111101010010001100"), 30),  // 157
    Symbol(b("1110001101111111101001010111101"), 31), // 158
    Symbol(b("1110001101111111101001010111111"), 31), // 159
    Symbol(b("1110001101111111101001010100010"), 31), // 160
    Symbol(b("1110001101111111101001011011111"), 31), // 161
    Symbol(b("1110001101111111101001010100100"), 31), // 162
    Symbol(b("1110001101111111101001010111001"), 31), // 163
    Symbol(b("1110001101111111101001011011010"), 31), // 164
    Symbol(b("1110001101111111101001011010010"), 31), // 165
    Symbol(b("1110001101111111101001011010000"), 31), // 166
    Symbol(b("1110001101111111101001010111010"), 31), // 167
    Symbol(b("1110001101111111101001010001011"), 31), // 168
    Symbol(b("1110001101111111101001010001010"), 31), // 169
    Symbol(b("1110001101111111101001010001001"), 31), // 170
    Symbol(b("1110001101111111101001010001000"), 31), // 171
    Symbol(b("1110001101111111101001010000111"), 31), // 172
    Symbol(b("1110001101111111101001010000110"), 31), // 173
    Symbol(b("1110001101111111101001010000101"), 31), // 174
    Symbol(b("1110001101111111101001010000100"), 31), // 175
    Symbol(b("1110001101111111101001011010111"), 31), // 176
    Symbol(b("1110001101111111101001011010110"), 31), // 177
    Symbol(b("1110001101111111101001011010101"), 31), // 178
    Symbol(b("1110001101111111101001011010100"), 31), // 179
    Symbol(b("1110001101111111101001010110111"), 31), // 180
    Symbol(b("1110001101111111101001010110110"), 31), // 181
    Symbol(b("1110001101111111101001010010101"), 31), // 182
    Symbol(b("1110001101111111101001010010100"), 31), // 183
    Symbol(b("1110001101111111101001010110101"), 31), // 184
    Symbol(b("1110001101111111101001010110100"), 31), // 185
    Symbol(b("1110001101111111101001010010111"), 31), // 186
    Symbol(b("1110001101111111101001010010110"), 31), // 187
    Symbol(b("1110001101111111101001010110001"), 31), // 188
    Symbol(b("1110001101111111101001010110000"), 31), // 189
    Symbol(b("1110001101111111101001010010011"), 31), // 190
    Symbol(b("1110001101111111101001010010010"), 31), // 191
    Symbol(b("1110001101111111101001011101101"), 31), // 192
    Symbol(b("1110001101111111101001011101100"), 31), // 193
    Symbol(b("1110001101111111101001011101011"), 31), // 194
    Symbol(b("1110001101111111101001011101010"), 31), // 195
    Symbol(b("1110001101111111101001011100111"), 31), // 196
    Symbol(b("1110001101111111101001011100110"), 31), // 197
    Symbol(b("1110001101111111101001010010001"), 31), // 198
    Symbol(b("1110001101111111101001010010000"), 31), // 199
    Symbol(b("1110001101111111101001011100011"), 31), // 200
    Symbol(b("1110001101111111101001011100010"), 31), // 201
    Symbol(b("1110001101111111101001011100001"), 31), // 202
    Symbol(b("1110001101111111101001011100000"), 31), // 203
    Symbol(b("1110001101111111101001011101001"), 31), // 204
    Symbol(b("1110001101111111101001011101000"), 31), // 205
    Symbol(b("1110001101111111101001010001111"), 31), // 206
    Symbol(b("1110001101111111101001010001110"), 31), // 207
    Symbol(b("1110001101111111101001010000011"), 31), // 208
    Symbol(b("1110001101111111101001010000010"), 31), // 209
    Symbol(b("1110001101111111101001010001101"), 31), // 210
    Symbol(b("1110001101111111101001010001100"), 31), // 211
    Symbol(b("1110001101111111101001011001111"), 31), // 212
    Symbol(b("1110001101111111101001011001110"), 31), // 213
    Symbol(b("1110001101111111101001010000001"), 31), // 214
    Symbol(b("1110001101111111101001010000000"), 31), // 215
    Symbol(b("1110001101111111101001011011001"), 31), // 216
    Symbol(b("1110001101111111101001011011000"), 31), // 217
    Symbol(b("1110001101111111101001011100101"), 31), // 218
    Symbol(b("1110001101111111101001011100100"), 31), // 219
    Symbol(b("1110001101111111101001010101101"), 31), // 220
    Symbol(b("1110001101111111101001010101100"), 31), // 221
    Symbol(b("1110001101111111101001010110011"), 31), // 222
    Symbol(b("1110001101111111101001010110010"), 31), // 223
    Symbol(b("1110001101111111101001010101001"), 31), // 224
    Symbol(b("1110001101111111101001010101000"), 31), // 225
    Symbol(b("1110001101111111101001011101111"), 31), // 226
    Symbol(b("1110001101111111101001011101110"), 31), // 227
    Symbol(b("1110001101111111101001011001011"), 31), // 228
    Symbol(b("1110001101111111101001011001010"), 31), // 229
    Symbol(b("1110001101111111101001011000011"), 31), // 230
    Symbol(b("1110001101111111101001011000010"), 31), // 231
    Symbol(b("1110001101111111101001010101011"), 31), // 232
    Symbol(b("1110001101111111101001010101010"), 31), // 233
    Symbol(b("1110001101111111101001011001001"), 31), // 234
    Symbol(b("1110001101111111101001011001000"), 31), // 235
    Symbol(b("1110001101111111101001011000111"), 31), // 236
    Symbol(b("1110001101111111101001011000110"), 31), // 237
    Symbol(b("1110001101111111101001011000001"), 31), // 238
    Symbol(b("1110001101111111101001011000000"), 31), // 239
    Symbol(b("1110001101111111101001010111100"), 31), // 240
    Symbol(b("1110001101111111101001010100111"), 31), // 241
    Symbol(b("1110001101111111101001010100110"), 31), // 242
    Symbol(b("1110001101111111101001010111110"), 31), // 243
    Symbol(b("1110001101111111101001010100011"), 31), // 244
    Symbol(b("1110001101111111101001010100001"), 31), // 245
    Symbol(b("1110001101111111101001010100000"), 31), // 246
    Symbol(b("1110001101111111101001011011110"), 31), // 247
    Symbol(b("1110001101111111101001010100101"), 31), // 248
    Symbol(b("1110001101111111101001011011101"), 31), // 249
    Symbol(b("1110001101111111101001011011100"), 31), // 250
    Symbol(b("1110001101111111101001010111000"), 31), // 251
    Symbol(b("1110001101111111101001011011011"), 31), // 252
    Symbol(b("1110001101111111101001011010001"), 31), // 253
    Symbol(b("1110001101111111101001011010011"), 31), // 254
    Symbol(b("1110001101111111101001010111011"), 31)  // 255
  )
  private val ROOT = buildTree(0, 0)
